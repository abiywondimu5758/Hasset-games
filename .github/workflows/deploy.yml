name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup SSH on runner
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.VPS_IP }} >> ~/.ssh/known_hosts

    - name: Clone or update repository on VPS
      uses: appleboy/ssh-action@master
      with:
        host:     ${{ secrets.VPS_IP }}
        username: ${{ secrets.VPS_USER }}
        key:      ${{ secrets.SSH_PRIVATE_KEY }}
        port:     22
        script: |
          mkdir -p /root/projects
          cd /root/projects

          # Clone fresh if .git not present
          if [ ! -d "hasset_games/.git" ]; then
            rm -rf hasset_games
            git clone --branch main https://github.com/abiywondimu5758/Hasset-games.git hasset_games
          else
            cd hasset_games
            git pull origin main
          fi

    - name: Copy docker-compose to VPS
      uses: appleboy/scp-action@master
      with:
        host:     ${{ secrets.VPS_IP }}
        username: ${{ secrets.VPS_USER }}
        key:      ${{ secrets.SSH_PRIVATE_KEY }}
        port:     22
        source:   "game_platform_backend/docker-compose.yml"
        target:   "/root/projects/hasset_games/game_platform_backend"

    - name: Install and deploy on VPS
      uses: appleboy/ssh-action@master
      with:
        host:     ${{ secrets.VPS_IP }}
        username: ${{ secrets.VPS_USER }}
        key:      ${{ secrets.SSH_PRIVATE_KEY }}
        port:     22
        script: |
          cd /root/projects/hasset_games/game_platform_backend

          # Ensure Node.js >=16 is installed
          if ! command -v node >/dev/null || [[ "$(node -v)" < "v16.13.0" ]]; then
            curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
            sudo apt-get install -y nodejs
          fi

          # Create .env from secret
          if [ -n "${{ secrets.APP_ENV_CONTENT }}" ]; then
            echo "${{ secrets.APP_ENV_CONTENT }}" > .env
          else
            echo "Warning: no APP_ENV_CONTENT secret found, .env missing" >&2
          fi

          # Install Node.js dependencies
          npm install

          # Deploy with Docker Compose
          sudo docker-compose up -d --build
